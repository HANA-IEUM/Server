name: Deploy Spring Boot to EC2

on:
  push:
    branches: [dev]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. GitHub Repository 체크아웃
      - name: Checkout source code
        uses: actions/checkout@v3

      # 2. JDK 21 설정
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # 3. Gradle 빌드 (테스트 제외)
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

      # 4. 빌드된 JAR 파일 EC2로 복사
      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build/libs/*.jar"
          target: "/home/ubuntu/app"
          strip_components: 2

      # 5. EC2에서 애플리케이션 실행 (환경변수 포함)
      - name: Run Spring Boot App on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "기존 애플리케이션 종료 시도 (8080 포트)"
            sudo lsof -t -i:8080 | xargs --no-run-if-empty sudo kill -9

            echo "환경변수 파일 생성"
            cd /home/ubuntu/app
            cat > .env <<EOF
            DB_URL=${{ secrets.DB_URL }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            JWT_ACCESS_EXPIRATION=${{ secrets.JWT_ACCESS_EXPIRATION }}
            JWT_REFRESH_EXPIRATION=${{ secrets.JWT_REFRESH_EXPIRATION }}
            CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }}
            SOLAPI_API_KEY=${{ secrets.SOLAPI_API_KEY }}
            SOLAPI_API_SECRET=${{ secrets.SOLAPI_API_SECRET }}
            SOLAPI_SENDER=${{ secrets.SOLAPI_SENDER }}
            EOF

            echo "새 애플리케이션 실행"
            JAR_FILE=$(ls *.jar | grep -v 'plain' | head -n 1)
            nohup java -jar "$JAR_FILE" > app.log 2>&1 &
            disown

            echo "최근 로그 출력"
            sleep 3
            tail -n 20 app.log

            echo "배포 완료"
